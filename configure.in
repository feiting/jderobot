dnl #############################################################
dnl #
dnl #  For information about autoconf, see:
dnl #
dnl #  http://www.gnu.org/software/autoconf/
dnl #
dnl #
dnl #############################################################


dnl ########################################
dnl #
dnl # Autoconf and automake initialization
dnl #
dnl ########################################
AC_INIT([jdec],[4.2])
AC_CONFIG_AUX_DIR([config])
dnl # AC_PREFIX_DEFAULT([/usr/local/jdec-AC_PACKAGE_VERSION])
dnl#init automake
AM_INIT_AUTOMAKE
dnl#config pkg-config
PKG_PROG_PKG_CONFIG

dnl#init libtool
AC_PROG_LIBTOOL
AC_SUBST([LIBTOOL_DEPS])

dnl#init dirs
libdir='${exec_prefix}/lib/jdec'
includedir='${prefix}/include/jdec'

dnl ########################################
dnl #
dnl # command line options and precious variables
dnl #
dnl ########################################
dnl##### switches to enable/disable features
dnl# main drivers switch
AC_ARG_ENABLE([drivers],
	      [AS_HELP_STRING([--disable-drivers],[disable drivers compilation])],
              [],
              [enable_drivers=yes])

dnl# enable_* can be yes,no or check
dnl# check disable driver if dependencies are unsatisfied
dnl### evi driver switch
AC_ARG_ENABLE([drivers-evi],
	      [AS_HELP_STRING([--disable-drivers-evi],
			      [disable evi driver compilation])],
	      [],
              [enable_drivers_evi=yes])

dnl### fw driver switch
AC_ARG_ENABLE([drivers-firewire],
	      [AS_HELP_STRING([--disable-drivers-firewire],
			      [disable firewire driver compilation])],
	      [],
              [enable_drivers_firewire=yes])

dnl### gazebo driver switch
AC_ARG_ENABLE([drivers-gazebo],
	      [AS_HELP_STRING([--disable-drivers-gazebo],
			      [disable gazebo driver compilation])],
	      [],
              [enable_drivers_gazebo=yes])

dnl### graphics_gtk  driver switch
AC_ARG_ENABLE([drivers-graphics_gtk],
	      [AS_HELP_STRING([--disable-drivers-graphics_gtk],
			      [disable graphics_gtk driver compilation])],
	      [],
              [enable_drivers_graphics_gtk=yes])

dnl### graphics_xforms  driver switch
AC_ARG_ENABLE([drivers-graphics_xforms],
	      [AS_HELP_STRING([--disable-drivers-graphics_xforms],
			      [disable graphics_xforms driver compilation])],
	      [],
              [enable_drivers_graphics_xforms=yes])

dnl### imagefile  driver switch
AC_ARG_ENABLE([drivers-imagefile],
	      [AS_HELP_STRING([--disable-drivers-imagefile],
			      [disable imagefile driver compilation])],
	      [],
              [enable_drivers_imagefile=yes])

dnl### mplayer  driver switch
AC_ARG_ENABLE([drivers-mplayer],
	      [AS_HELP_STRING([--disable-drivers-mplayer],
			      [disable mplayer driver compilation])],
	      [],
              [enable_drivers_mplayer=yes])

dnl### networkclient  driver switch
AC_ARG_ENABLE([drivers-networkclient],
	      [AS_HELP_STRING([--disable-drivers-networkclient],
			      [disable networkclient driver compilation])],
	      [],
              [enable_drivers_networkclient=yes])

dnl### networkserver  driver switch
AC_ARG_ENABLE([drivers-networkserver],
	      [AS_HELP_STRING([--disable-drivers-networkserver],
			      [disable networkserver driver compilation])],
	      [],
              [enable_drivers_networkserver=yes])

dnl### pantilt  driver switch
AC_ARG_ENABLE([drivers-pantilt],
	      [AS_HELP_STRING([--disable-drivers-pantilt],
			      [disable pantilt driver compilation])],
	      [],
              [enable_drivers_pantilt=yes])

dnl### player  driver switch
AC_ARG_ENABLE([drivers-player],
	      [AS_HELP_STRING([--disable-drivers-player],
			      [disable player driver compilation])],
	      [],
              [enable_drivers_player=yes])

dnl### wiimote driver switch
AC_ARG_ENABLE([drivers-wiimote],
	      [AS_HELP_STRING([--disable-drivers-wiimote],
			      [disable wiimote driver compilation])],
	      [],
              [enable_drivers_wiimote=yes])

dnl# main schemas switch
AC_ARG_WITH([schemas],
            [AS_HELP_STRING([--without-schemas],[disable schemas compilation])],
            [],
            [with_schemas=no])

dnl# main utils switch
AC_ARG_WITH([utils],
            [AS_HELP_STRING([--without-utils],[disable utils compilation])],
            [],
            [with_utils=yes])

dnl# main examples switch
AC_ARG_WITH([examples],
            [AS_HELP_STRING([--without-examples],[disable examples compilation])],
            [],
            [with_examples=no])

dnl##### precious variables
dnl #commands
AC_ARG_VAR([MPLAYER],[command used by mplayer driver as video source])
AC_ARG_VAR([MENCODER],[command used by mplayer driver as video source])
AC_ARG_VAR([DOXYGEN],[command used to generate code documentation])
AC_ARG_VAR([LATEX],[tex compiler command])
AC_ARG_VAR([PDFLATEX],[pdf generator command])
AC_ARG_VAR([DVIPS],[dvi to ps conversion command])
AC_ARG_VAR([BIBTEX],[latex bibliography generator command])


dnl ########################################
dnl #
dnl # compiler options
dnl #
dnl ########################################
dnl # set compiler flags
CFLAGS="-g -pedantic -Wall"
dnl # check gcc
AC_PROG_CC

CXXFLAGS="-g -pedantic -Wall"
AC_PROG_CXX

dnl # check stdc headers
AC_HEADER_STDC

dnl ########################################
dnl #
dnl # core headers and libraries check
dnl #
dnl ########################################
dnl # Define CFGDIR
CFGDIR=$datadir/$PACKAGE
AC_SUBST([CFGDIR])

dnl # check dl
AC_CHECK_HEADERS([dlfcn.h])
AC_CHECK_LIB([dl],[dlopen],
             [LIBS="$LIBS -ldl"],
	     AC_MSG_ERROR([dl library not found]))

dnl # check ptheads
AC_CHECK_HEADERS([pthread.h],[],AC_MSG_ERROR([pthread.h not found]))
AC_CHECK_LIB([pthread],[pthread_create],
             [CFLAGS="$CFLAGS -pthread -D_REENTRANT -D_POSIX_PTHREAD_SEMANTICS"],
	     AC_MSG_ERROR([pthread library not found]))


dnl ########################################
dnl #
dnl # drivers headers and libraries check
dnl #
dnl # *driver_CFLAGS and driver_LIBS can be defined as environment variables in
dnl #  configure time to set paths and other compile/link options
dnl #
dnl ########################################
if test "x$enable_drivers" != xno; then
   AC_SUBST([driverdir],['${libdir}/drivers'])
   AC_SUBST([DRIVERS_SUBDIR],[drivers])
   AC_SUBST([DRIVERS],["evi firewire gazebo graphics_gtk graphics_xforms imagefile mplayer networkclient networkserver pantilt player wiimote"])
   dnl#check evi deps
   AM_CONDITIONAL([ENABLE_EVI],[false])
   if test "x$enable_drivers_evi" != xno; then
      ENABLED_DRIVERS="$ENABLED_DRIVERS evi"
      AC_SUBST([EVI_CFLAGS])
      AC_SUBST([EVI_LIBS])
      AM_CONDITIONAL([ENABLE_EVI],[true])
   fi

   dnl#check firewire deps
   AM_CONDITIONAL([ENABLE_FIREWIRE],[false])
   if test "x$enable_drivers_firewire" != xno; then
      PKG_CHECK_MODULES([FIREWIRE],[libraw1394 libdc1394],
			[ENABLED_DRIVERS="$ENABLED_DRIVERS firewire"
			AM_CONDITIONAL([ENABLE_FIREWIRE],[true])],
			[if test "x$enable_drivers_firewire" != xcheck; then
			    AC_MSG_FAILURE([--enable-drivers-firewire was given, but there was errors: $FIREWIRE_PKG_ERRORS])
			 fi])
   fi
   
   dnl#check gazebo deps
   AM_CONDITIONAL([ENABLE_GAZEBO],[false])
   if test "x$enable_drivers_gazebo" != xno; then
      AC_CHECK_HEADERS([gazebo.h],
      		       [],
		       [GAZEBO_PKG_ERRORS="$GAZEBO_PKG_ERRORS, $ac_header not found"])
      AC_CHECK_LIB([gazebo],[main],
		   [GAZEBO_LIBS="$GAZEBO_LIBS -lgazebo"],
		   [GAZEBO_PKG_ERRORS="$GAZEBO_PKG_ERRORS, libgazebo not found"])
      if test "$GAZEBO_PKG_ERRORS"; then
	 if test "x$enable_drivers_gazebo" != xcheck; then
	    AC_MSG_FAILURE([--enable-drivers-gazebo was given, but there was errors: $GAZEBO_PKG_ERRORS])
	 fi
      else
	 ENABLED_DRIVERS="$ENABLED_DRIVERS gazebo"
	 AM_CONDITIONAL([ENABLE_GAZEBO],[true])
	 AC_SUBST([GAZEBO_CFLAGS])
	 AC_SUBST([GAZEBO_LIBS])
      fi
   fi

   dnl#check graphics_gtk deps
   AM_CONDITIONAL([ENABLE_GRAPHICS_GTK],[false])
   if test "x$enable_drivers_graphics_gtk" != xno; then
      PKG_CHECK_MODULES([GTK],[gtkglext-1.0 gdkglext-1.0 gdkglext-1.0 gthread-2.0 libglade-2.0],
			[ENABLED_DRIVERS="$ENABLED_DRIVERS graphics_gtk"
			AM_CONDITIONAL([ENABLE_GRAPHICS_GTK],[true])],
			[if test "x$enable_drivers_graphics_gtk" != xcheck; then
			    AC_MSG_FAILURE([--enable-drivers-graphics_gtk was given, but there was errors: $GTK_PKG_ERRORS])
			 fi])
   fi

   dnl#check graphics_xforms deps
   AM_CONDITIONAL([ENABLE_GRAPHICS_XFORMS],[false])
   if test "x$enable_drivers_graphics_xforms" != xno; then
      AC_CHECK_HEADERS([X11/Xlib.h X11/Xutil.h X11/Xos.h X11/Xatom.h X11/forms.h],
      		       [],
		       [GRAPHICS_XFORMS_PKG_ERRORS="$GRAPHICS_XFORMS_PKG_ERRORS, $ac_header not found"])
      AC_CHECK_LIB([forms],[main],
		   [GRAPHICS_XFORMS_LIBS="$GRAPHICS_XFORMS_LIBS -lforms"],
		   [GRAPHICS_XFORMS_PKG_ERRORS="$GRAPHICS_XFORMS_PKG_ERRORS, libforms not found"],[-lm])
      AC_CHECK_LIB([X11],[main],
		   [GRAPHICS_XFORMS_LIBS="$GRAPHICS_XFORMS_LIBS -lX11"],
		   [GRAPHICS_XFORMS_PKG_ERRORS="$GRAPHICS_XFORMS_PKG_ERRORS, libX11 not found"])
      if test "$GRAPHICS_XFORMS_PKG_ERRORS"; then
	 if test "x$enable_drivers_graphics_xforms" != xcheck; then
	    AC_MSG_FAILURE([--enable-drivers-graphics_xforms was given, but there was errors: $GRAPHICS_XFORMS_PKG_ERRORS])
	 fi
      else
	 ENABLED_DRIVERS="$ENABLED_DRIVERS graphics_xforms"
	 AM_CONDITIONAL([ENABLE_GRAPHICS_XFORMS],[true])
	 AC_SUBST([GRAPHICS_XFORMS_CFLAGS])
	 AC_SUBST([GRAPHICS_XFORMS_LIBS])
      fi
   fi

   dnl#check imagefile deps
   AM_CONDITIONAL([ENABLE_IMAGEFILE],[false])
   if test "x$enable_drivers_imagefile" != xno; then
      ENABLED_DRIVERS="$ENABLED_DRIVERS imagefile"
      AM_CONDITIONAL([ENABLE_IMAGEFILE],[true])
      AC_SUBST([IMAGEFILE_CFLAGS])
      AC_SUBST([IMAGEFILE_LIBS])
   fi

   dnl#check mplayer deps
   AM_CONDITIONAL([ENABLE_MPLAYER],[false])
   if test "x$enable_drivers_mplayer" != xno; then
      AC_PATH_PROG([MPLAYER],[mplayer],[no])
      if test "x$MPLAYER" = xno; then
      	 MPLAYER_PKG_ERRORS="mplayer not found"
      fi
      AC_PATH_PROG([MENCODER],[mencoder],[no])
      if test "x$MENCODER" = xno; then
      	 MPLAYER_PKG_ERRORS="$MPLAYER_PKG_ERRORS, mencoder not found"
      fi
      if test "$MPLAYER_PKG_ERRORS"; then
      	 if test "x$enable_drivers_mplayer" != xcheck; then
	    AC_MSG_FAILURE([--enable-drivers-mplayer was given, but there was errors: $MPLAYER_PKG_ERRORS])
	 fi
      else
	 ENABLED_DRIVERS="$ENABLED_DRIVERS mplayer"
	 AM_CONDITIONAL([ENABLE_MPLAYER],[true])
	 AC_SUBST([MPLAYER_CFLAGS])
	 AC_SUBST([MPLATER_LIBS])
      fi
   fi

   dnl#check networkclient deps
   AM_CONDITIONAL([ENABLE_NETWORKCLIENT],[false])
   if test "x$enable_drivers_networkclient" != xno; then
      ENABLED_DRIVERS="$ENABLED_DRIVERS networkclient"
      AM_CONDITIONAL([ENABLE_NETWORKCLIENT],[true])
      AC_SUBST([NETWORKCLIENT_CFLAGS])
      AC_SUBST([NETWORKCLIENT_LIBS])
   fi

   dnl#check networkserver deps
   AM_CONDITIONAL([ENABLE_NETWORKSERVER],[false])
   if test "x$enable_drivers_networkserver" != xno; then
      ENABLED_DRIVERS="$ENABLED_DRIVERS networkserver"
      AM_CONDITIONAL([ENABLE_NETWORKSERVER],[true])
      AC_SUBST([NETWORKSERVER_CFLAGS])
      AC_SUBST([NETWORKSERVER_LIBS])
   fi

   dnl#check pantilt deps
   AM_CONDITIONAL([ENABLE_PANTILT],[false])
   if test "x$enable_drivers_pantilt" != xno; then
      ENABLED_DRIVERS="$ENABLED_DRIVERS pantilt"
      AM_CONDITIONAL([ENABLE_PANTILT],[true])
      AC_SUBST([PANTILT_CFLAGS])
      AC_SUBST([PANTILT_LIBS])
   fi

   dnl#check player deps
   AM_CONDITIONAL([ENABLE_PLAYER],[false])
   if test "x$enable_drivers_player" != xno; then
      AC_CHECK_HEADERS([libplayerc/playerc.h],
      		       [],
		       [PLAYER_PKG_ERRORS="$PLAYER_PKG_ERRORS, $ac_header not found"])
      AC_CHECK_LIB([playerc],[main],
		   [PLAYER_LIBS="$PLAYER_LIBS -lplayerc"],
		   [PLAYER_PKG_ERRORS="$PLAYER_PKG_ERRORS, libplayerc not found"])
      if test "$PLAYER_PKG_ERRORS"; then
	 if test "x$enable_drivers_player" != xcheck; then
	    AC_MSG_FAILURE([--enable-drivers-player was given, but there was errors: $PLAYER_PKG_ERRORS])
	 fi
      else
	 ENABLED_DRIVERS="$ENABLED_DRIVERS player"
	 AM_CONDITIONAL([ENABLE_PLAYER],[true])
	 AC_SUBST([PLAYER_CFLAGS])
	 AC_SUBST([PLAYER_LIBS])
      fi
   fi

   dnl#check wiimote deps
   AM_CONDITIONAL([ENABLE_WIIMOTE],[false])
   if test "x$enable_drivers_wiimote" != xno; then
      AC_CHECK_HEADERS([cwiid.h],
      		       [],
		       [WIIMOTE_PKG_ERRORS="$WIIMOTE_PKG_ERRORS, $ac_header not found"])
      AC_CHECK_LIB([cwiid],[main],
		   [WIIMOTE_LIBS="$WIIMOTE_LIBS -lcwiid"],
		   [WIIMOTE_PKG_ERRORS="$WIIMOTE_PKG_ERRORS, libcwiid not found"])
      if test "$WIIMOTE_PKG_ERRORS"; then
	 if test "x$enable_drivers_wiimote" != xcheck; then
	    AC_MSG_FAILURE([--enable-drivers-wiimote was given, but there was errors: $WIIMOTE_PKG_ERRORS])
	 fi
      else
	 ENABLED_DRIVERS="$ENABLED_DRIVERS wiimote"
	 AM_CONDITIONAL([ENABLE_WIIMOTE],[true])
	 AC_SUBST([WIIMOTE_CFLAGS])
	 AC_SUBST([WIIMOTE_LIBS])
      fi
   fi

   AC_SUBST([ENABLED_DRIVERS])

   
fi

dnl ########################################
dnl #
dnl # doc generators check
dnl #
dnl ########################################
dnl FIXME: que hacer si los chequeos fallan?
AC_SUBST([DOCS_SUBDIR],[docs])
AC_PATH_PROG([DOXYGEN],[doxygen])
AC_PATH_PROG([LATEX],[latex])
AC_PATH_PROG([PDFLATEX],[pdflatex])
AC_PATH_PROG([DVIPS],[dvips])
AC_PATH_PROG([BIBTEX],[bibtex])

dnl ########################################
dnl #
dnl # schemas generators check
dnl #
dnl ########################################
if test "x$with_schemas" != xno; then
   AC_SUBST([SCHEMAS_SUBDIR],[schemas])
   AM_CONDITIONAL([WITH_SCHEMAS],[true])
else
   AM_CONDITIONAL([WITH_SCHEMAS],[false])
fi

dnl ########################################
dnl #
dnl # utils generators check
dnl #
dnl ########################################
if test "x$with_utils" != xno; then
   AC_SUBST([UTILS_SUBDIR],[utils])
   AM_CONDITIONAL([WITH_UTILS],[true])
else
   AM_CONDITIONAL([WITH_UTILS],[false])
fi


dnl ########################################
dnl #
dnl # examples generators check
dnl #
dnl ########################################
if test "x$with_examples" != xno; then
   AC_SUBST([EXAMPLES_SUBDIR],[examples])
   AM_CONDITIONAL([WITH_EXAMPLES],[true])
else
   AM_CONDITIONAL([WITH_EXAMPLES],[false])
fi


dnl ########################################
dnl #
dnl # Generate output, main and core makefiles
dnl #
dnl ########################################
AC_CONFIG_FILES([Makefile])
AC_CONFIG_FILES([base/Makefile])
dnl # generate driver Makefiles
AC_CONFIG_FILES([drivers/Makefile \
		drivers/evi/Makefile \
		drivers/firewire/Makefile \
		drivers/gazebo/Makefile \
		drivers/graphics_gtk/Makefile \
		drivers/graphics_xforms/Makefile \
		drivers/imagefile/Makefile \
		drivers/mplayer/Makefile \
		drivers/networkclient/Makefile \
		drivers/networkserver/Makefile \
		drivers/pantilt/Makefile \
		drivers/player/Makefile \
		drivers/wiimote/Makefile \
		docs/Makefile \
		utils/Makefile \
		utils/colorspaces/Makefile \
		utils/fuzzylib/Makefile \
		utils/pioneer/Makefile \
		utils/progeo/Makefile
		])

AC_OUTPUT