dnl #############################################################
dnl #
dnl #  For information about autoconf, see:
dnl #
dnl #  http://www.gnu.org/software/autoconf/
dnl #
dnl #
dnl #############################################################


dnl ########################################
dnl #
dnl # Autoconf and automake initialization
dnl #
dnl ########################################
AC_INIT([jdec],[4.2])
AC_CONFIG_AUX_DIR([config])
dnl # AC_PREFIX_DEFAULT([/usr/local/jdec-AC_PACKAGE_VERSION])
dnl#init automake
AM_INIT_AUTOMAKE
dnl#config pkg-config
PKG_PROG_PKG_CONFIG

dnl#init libtool
AC_PROG_LIBTOOL
AC_SUBST([LIBTOOL_DEPS])

dnl#init dirs
libdir='${exec_prefix}/lib/jdec'
includedir='${prefix}/include/jdec'

AC_SUBST([driverdir],['${libdir}/drivers'])
AC_SUBST([schemadir],['${libdir}/schemas'])
AC_SUBST([confdir],['${datadir}/${PACKAGE}/conf'])
AC_SUBST([gladedir],['${datadir}/${PACKAGE}/glade'])

dnl ########################################
dnl #
dnl # command line options and precious variables
dnl #
dnl ########################################
dnl##### switches to enable/disable features

dnl### evi driver switch
AC_ARG_ENABLE([drivers-evi],
	      [AS_HELP_STRING([--disable-drivers-evi],
			      [disable evi driver compilation])],
	      [],
              [enable_drivers_evi=yes])

dnl### fw driver switch
AC_ARG_ENABLE([drivers-firewire],
	      [AS_HELP_STRING([--disable-drivers-firewire],
			      [disable firewire driver compilation])],
	      [],
              [enable_drivers_firewire=yes])

dnl### gazebo driver switch
AC_ARG_ENABLE([drivers-gazebo],
	      [AS_HELP_STRING([--disable-drivers-gazebo],
			      [disable gazebo driver compilation])],
	      [],
              [enable_drivers_gazebo=yes])

dnl### graphics_gtk  driver switch
AC_ARG_ENABLE([drivers-graphics_gtk],
	      [AS_HELP_STRING([--disable-drivers-graphics_gtk],
			      [disable graphics_gtk driver compilation])],
	      [],
              [enable_drivers_graphics_gtk=yes])

dnl### graphics_xforms  driver switch
AC_ARG_ENABLE([drivers-graphics_xforms],
	      [AS_HELP_STRING([--disable-drivers-graphics_xforms],
			      [disable graphics_xforms driver compilation])],
	      [],
              [enable_drivers_graphics_xforms=yes])

dnl### imagefile  driver switch
AC_ARG_ENABLE([drivers-imagefile],
	      [AS_HELP_STRING([--disable-drivers-imagefile],
			      [disable imagefile driver compilation])],
	      [],
              [enable_drivers_imagefile=yes])

dnl### mplayer  driver switch
AC_ARG_ENABLE([drivers-mplayer],
	      [AS_HELP_STRING([--disable-drivers-mplayer],
			      [disable mplayer driver compilation])],
	      [],
              [enable_drivers_mplayer=yes])

dnl### networkclient  driver switch
AC_ARG_ENABLE([drivers-networkclient],
	      [AS_HELP_STRING([--disable-drivers-networkclient],
			      [disable networkclient driver compilation])],
	      [],
              [enable_drivers_networkclient=yes])

dnl### networkserver  driver switch
AC_ARG_ENABLE([drivers-networkserver],
	      [AS_HELP_STRING([--disable-drivers-networkserver],
			      [disable networkserver driver compilation])],
	      [],
              [enable_drivers_networkserver=yes])

dnl### pantilt  driver switch
AC_ARG_ENABLE([drivers-pantilt],
	      [AS_HELP_STRING([--disable-drivers-pantilt],
			      [disable pantilt driver compilation])],
	      [],
              [enable_drivers_pantilt=yes])

dnl### player  driver switch
AC_ARG_ENABLE([drivers-player],
	      [AS_HELP_STRING([--disable-drivers-player],
			      [disable player driver compilation])],
	      [],
              [enable_drivers_player=yes])

dnl### wiimote driver switch
AC_ARG_ENABLE([drivers-wiimote],
	      [AS_HELP_STRING([--disable-drivers-wiimote],
			      [disable wiimote driver compilation])],
	      [],
              [enable_drivers_wiimote=yes])


AC_ARG_ENABLE([schemas-eyeoperator],
	      [AS_HELP_STRING([--disable-schemas-eyeoperator],[disable eyeoperator1/4 schema compilation])],
              [],
              [enable_schemas_eyeoperator1=yes])

AC_ARG_ENABLE([schemas-followball],
	      [AS_HELP_STRING([--disable-schemas-followball],[disable followball schema compilation])],
              [],
              [enable_schemas_followball=yes])

AC_ARG_ENABLE([schemas-hsvtuner],
	      [AS_HELP_STRING([--disable-schemas-hsvtuner],[disable hsvtuner schema compilation])],
              [],
              [enable_schemas_hsvtuner=yes])

AC_ARG_ENABLE([schemas-image_viewer],
	      [AS_HELP_STRING([--disable-schemas-image_viewer],[disable image_viewer schema compilation])],
              [],
              [enable_schemas_image_viewer=yes])

AC_ARG_ENABLE([schemas-imgrectifier],
	      [AS_HELP_STRING([--disable-schemas-imgrectifier],[disable imgrectifier schema compilation])],
              [],
              [enable_schemas_imgrectifier=yes])

AC_ARG_ENABLE([schemas-introrob],
	      [AS_HELP_STRING([--disable-schemas-introrob],[disable introrob schema compilation])],
              [],
              [enable_schemas_introrob=yes])

AC_ARG_ENABLE([schemas-mastergui],
	      [AS_HELP_STRING([--disable-schemas-mastergui],[disable mastergui schema compilation])],
              [],
              [enable_schemas_mastergui=yes])

AC_ARG_ENABLE([schemas-opengldemo],
	      [AS_HELP_STRING([--disable-schemas-opengldemo],[disable opengldemo schema compilation])],
              [],
              [enable_schemas_opengldemo=yes])

AC_ARG_ENABLE([schemas-opflow],
	      [AS_HELP_STRING([--disable-schemas-opflow],[disable opflow schema compilation])],
              [],
              [enable_schemas_opflow=yes])

AC_ARG_ENABLE([schemas-recorder],
	      [AS_HELP_STRING([--disable-schemas-recorder],[disable recorder schema compilation])],
              [],
              [enable_schemas_recorder=yes])

AC_ARG_ENABLE([schemas-teleoperator],
	      [AS_HELP_STRING([--disable-schemas-teleoperator],[disable teleoperator schema compilation])],
              [],
              [enable_schemas_teleoperator=yes])

AC_ARG_ENABLE([schemas-wiimote_viewer],
	      [AS_HELP_STRING([--disable-schemas-wiimote_viewer],[disable wiimote_viewer schema compilation])],
              [],
              [enable_schemas_wiimote_viewer=yes])

dnl# main utils switch
AC_ARG_ENABLE([utils],
	      [AS_HELP_STRING([--disable-utils],[disable utils compilation])],
              [],
              [enable_utils=yes])

dnl##### precious variables
dnl # Allow user to define PROG variables
AC_ARG_VAR([FDESIGN],[command used to build xforms guis])
AC_ARG_VAR([MPLAYER],[command used by mplayer driver as video source])
AC_ARG_VAR([MENCODER],[command used by mplayer driver as video source])
AC_ARG_VAR([DOXYGEN],[command used to generate code documentation])
AC_ARG_VAR([LATEX],[tex compiler command])
AC_ARG_VAR([PDFLATEX],[pdf generator command])
AC_ARG_VAR([DVIPS],[dvi to ps conversion command])
AC_ARG_VAR([BIBTEX],[latex bibliography generator command])


dnl ########################################
dnl #
dnl # compiler options
dnl #
dnl ########################################
dnl # set compiler flags
CFLAGS="-g -pedantic -Wall"
dnl # check gcc
AC_PROG_CC

CXXFLAGS="-g -pedantic -Wall"
AC_PROG_CXX

dnl # check stdc headers
AC_HEADER_STDC

dnl ########################################
dnl #
dnl # core headers and libraries check
dnl #
dnl ########################################
dnl # check dl
AC_CHECK_HEADERS([dlfcn.h])
AC_CHECK_LIB([dl],[dlopen],
             [LIBS="$LIBS -ldl"],
	     AC_MSG_ERROR([dl library not found]))

dnl # check ptheads
AC_CHECK_HEADERS([pthread.h],[],AC_MSG_ERROR([pthread.h not found]))
AC_CHECK_LIB([pthread],[pthread_create],
             [CFLAGS="$CFLAGS -pthread -D_REENTRANT -D_POSIX_PTHREAD_SEMANTICS"],
	     AC_MSG_ERROR([pthread library not found]))


dnl ########################################
dnl #
dnl # drivers headers and libraries check
dnl #
dnl # * <driver>_CFLAGS and <driver>_LIBS can be defined as environment variables in
dnl #   configure time to set paths and other compile/link options
dnl #
dnl ########################################
AC_MSG_NOTICE([*** Checking drivers:])

dnl#check evi deps
AC_MSG_NOTICE([**** Checking driver evi:])
if test "x$enable_drivers_evi" = xno; then
   AM_CONDITIONAL([ENABLE_EVI],[false])
else
   ENABLED_DRIVERS="$ENABLED_DRIVERS evi"
   AM_CONDITIONAL([ENABLE_EVI],[true])
fi
AC_ARG_VAR([EVI_CFLAGS],[C compiler flags for EVI])
AC_ARG_VAR([EVI_LIBS],[linker flags for EVI])
AC_SUBST([EVI_CFLAGS])
AC_SUBST([EVI_LIBS])

dnl#check firewire deps
if test "x$enable_drivers_firewire" = xno; then
   AM_CONDITIONAL([ENABLE_FIREWIRE],[false])
else
   AC_MSG_NOTICE([**** Checking driver firewire:])
   PKG_CHECK_MODULES([FIREWIRE],[libraw1394 libdc1394],
		[ENABLED_DRIVERS="$ENABLED_DRIVERS firewire"
		AM_CONDITIONAL([ENABLE_FIREWIRE],[true])],
		[AC_MSG_FAILURE([--enable-drivers-firewire was given, but there was errors: $FIREWIRE_PKG_ERRORS])])
fi

dnl#check gazebo deps
if test "x$enable_drivers_gazebo" = xno; then
   AM_CONDITIONAL([ENABLE_GAZEBO],[false])
else
ERRORS=""
AC_MSG_NOTICE([**** Checking driver gazebo:])
AC_CHECK_HEADERS([gazebo.h],
		 [],
		 [ERRORS="$ERRORS, $ac_header not found"])
AC_CHECK_LIB([gazebo],[main],
	     [GAZEBO_LIBS="$GAZEBO_LIBS -lgazebo"],
	     [ERRORS="$ERRORS, libgazebo not found"])
   if test "$ERRORS"; then
      AC_MSG_FAILURE([--enable-drivers-gazebo was given, but there was errors: $ERRORS])
   else
      ENABLED_DRIVERS="$ENABLED_DRIVERS gazebo"
      AM_CONDITIONAL([ENABLE_GAZEBO],[true])
   fi
fi
AC_ARG_VAR([GAZEBO_CFLAGS],[C compiler flags for GAZEBO])
AC_ARG_VAR([GAZEBO_LIBS],[linker flags for GAZEBO])
AC_SUBST([GAZEBO_CFLAGS])
AC_SUBST([GAZEBO_LIBS])

dnl#check graphics_gtk deps
if test "x$enable_drivers_graphics_gtk" = xno; then
   AM_CONDITIONAL([ENABLE_GRAPHICS_GTK],[false])
else
   AC_MSG_NOTICE([**** Checking driver graphics_gtk:])
   PKG_CHECK_MODULES([GRAPHICS_GTK],[gtkglext-1.0 gdkglext-1.0 gthread-2.0 libglade-2.0],
						  [ENABLED_DRIVERS="$ENABLED_DRIVERS graphics_gtk"
						  AM_CONDITIONAL([ENABLE_GRAPHICS_GTK],[true])],
						  [AC_MSG_FAILURE([--enable-drivers-graphics_gtk was given, but there was errors: $GRAPHICS_GTK_PKG_ERRORS])])
fi

dnl#check graphics_xforms deps
if test "x$enable_drivers_graphics_xforms" = xno; then
   AM_CONDITIONAL([ENABLE_GRAPHICS_XFORMS],[false])
else
ERRORS=""
AC_MSG_NOTICE([**** Checking driver graphics_xforms:])
AC_CHECK_HEADERS([X11/Xlib.h X11/Xutil.h X11/Xos.h X11/Xatom.h X11/forms.h],
      		 [],
		 [ERRORS="$ERRORS, $ac_header not found"])
AC_CHECK_LIB([forms],[main],
	     [GRAPHICS_XFORMS_LIBS="$GRAPHICS_XFORMS_LIBS -lforms"],
	     [ERRORS="$ERRORS, libforms not found"],[-lm])
AC_CHECK_LIB([X11],[main],
	     [GRAPHICS_XFORMS_LIBS="$GRAPHICS_XFORMS_LIBS -lX11"],
	     [ERRORS="$ERRORS, libX11 not found"])
   if test "$ERRORS"; then
      AC_MSG_FAILURE([--enable-drivers-graphics_xforms was given, but there was errors: $ERRORS])
   else
      ENABLED_DRIVERS="$ENABLED_DRIVERS graphics_xforms"
      AM_CONDITIONAL([ENABLE_GRAPHICS_XFORMS],[true])
   fi
fi
AC_ARG_VAR([GRAPHICS_XFORMS_CFLAGS],[C compiler flags for GRAPHICS_XFORMS])
AC_ARG_VAR([GRAPHICS_XFORMS_LIBS],[linker flags for GRAPHICS_XFORMS])
AC_SUBST([GRAPHICS_XFORMS_CFLAGS])
AC_SUBST([GRAPHICS_XFORMS_LIBS])

dnl#check imagefile deps
if test "x$enable_drivers_imagefile" = xno; then
   AM_CONDITIONAL([ENABLE_IMAGEFILE],[false])
else
   AC_MSG_NOTICE([**** Checking driver imagefile:])
   ENABLED_DRIVERS="$ENABLED_DRIVERS imagefile"
   AM_CONDITIONAL([ENABLE_IMAGEFILE],[true])
fi
AC_ARG_VAR([IMAGEFILE_CFLAGS],[C compiler flags for IMAGEFILE])
AC_ARG_VAR([IMAGEFILE_LIBS],[linker flags for IMAGEFILE])
AC_SUBST([IMAGEFILE_CFLAGS])
AC_SUBST([IMAGEFILE_LIBS])

dnl#check mplayer deps
if test "x$enable_drivers_mplayer" = xno; then
   AM_CONDITIONAL([ENABLE_MPLAYER],[false])
else
ERRORS=""
AC_MSG_NOTICE([**** Checking driver mplayer:])
AC_PATH_PROG([MPLAYER],[mplayer],[no])
if test "x$MPLAYER" = xno; then
   ERRORS="mplayer not found"
fi
AC_PATH_PROG([MENCODER],[mencoder],[no])
if test "x$MENCODER" = xno; then
   ERRORS="$ERRORS, mencoder not found"
fi
   if test "$ERRORS"; then
      AC_MSG_FAILURE([--enable-drivers-mplayer was given, but there was errors: $ERRORS])
   else
      ENABLED_DRIVERS="$ENABLED_DRIVERS mplayer"
      AM_CONDITIONAL([ENABLE_MPLAYER],[true])
   fi
fi
AC_ARG_VAR([MPLAYER_CFLAGS],[C compiler flags for MPLAYER])
AC_ARG_VAR([MPLAYER_LIBS],[linker flags for MPLAYER])
AC_SUBST([MPLAYER_CFLAGS])
AC_SUBST([MPLAYER_LIBS])

dnl#check networkclient deps
if test "x$enable_drivers_networkclient" = xno; then
   AM_CONDITIONAL([ENABLE_NETWORKCLIENT],[false])
else
   AC_MSG_NOTICE([**** Checking driver networkclient:])
   ENABLED_DRIVERS="$ENABLED_DRIVERS networkclient"
   AM_CONDITIONAL([ENABLE_NETWORKCLIENT],[true])
fi
AC_ARG_VAR([NETWORKCLIENT_CFLAGS],[C compiler flags for NETWORKCLIENT])
AC_ARG_VAR([NETWORKCLIENT_LIBS],[linker flags for NETWORKCLIENT])
AC_SUBST([NETWORKCLIENT_CFLAGS])
AC_SUBST([NETWORKCLIENT_LIBS])

dnl#check networkserver deps
if test "x$enable_drivers_networkserver" = xno; then
   AM_CONDITIONAL([ENABLE_NETWORKSERVER],[false])
else
   AC_MSG_NOTICE([**** Checking driver networkserver:])
   ENABLED_DRIVERS="$ENABLED_DRIVERS networkserver"
   AM_CONDITIONAL([ENABLE_NETWORKSERVER],[true])
fi
AC_ARG_VAR([NETWORKSERVER_CFLAGS],[C compiler flags for NETWORKSERVER])
AC_ARG_VAR([NETWORKSERVER_LIBS],[linker flags for NETWORKSERVER])
AC_SUBST([NETWORKSERVER_CFLAGS])
AC_SUBST([NETWORKSERVER_LIBS])

dnl#check pantilt deps
if test "x$enable_drivers_pantilt" = xno; then
   AM_CONDITIONAL([ENABLE_PANTILT],[false])
else
   AC_MSG_NOTICE([**** Checking driver pantilt:])
   ENABLED_DRIVERS="$ENABLED_DRIVERS pantilt"
   AM_CONDITIONAL([ENABLE_PANTILT],[true])
fi
AC_ARG_VAR([PANTILT_CFLAGS],[C compiler flags for PANTILT])
AC_ARG_VAR([PANTILT_LIBS],[linker flags for PANTILT])
AC_SUBST([PANTILT_CFLAGS])
AC_SUBST([PANTILT_LIBS])


dnl#check player deps
if test "x$enable_drivers_player" = xno; then
   AM_CONDITIONAL([ENABLE_PLAYER],[false])
else
ERRORS=""
AC_MSG_NOTICE([**** Checking driver player:])
AC_CHECK_HEADERS([libplayerc/playerc.h],
      		 [],
		 [ERRORS="$ERRORS, $ac_header not found"])
AC_CHECK_LIB([playerc],[main],
	     [PLAYER_LIBS="$PLAYER_LIBS -lplayerc"],
	     [ERRORS="$ERRORS, libplayerc not found"])
   if test "$ERRORS"; then
      AC_MSG_FAILURE([--enable-drivers-player was given, but there was errors: $ERRORS])
   else
      ENABLED_DRIVERS="$ENABLED_DRIVERS player"
      AM_CONDITIONAL([ENABLE_PLAYER],[true])
   fi
fi
AC_ARG_VAR([PLAYER_CFLAGS],[C compiler flags for PLAYER])
AC_ARG_VAR([PLAYER_LIBS],[linker flags for PLAYER])
AC_SUBST([PLAYER_CFLAGS])
AC_SUBST([PLAYER_LIBS])

dnl#check wiimote deps
if test "x$enable_drivers_wiimote" = xno; then
   AM_CONDITIONAL([ENABLE_WIIMOTE],[false])
else
ERRORS=""
AC_MSG_NOTICE([**** Checking driver wiimote:])
AC_CHECK_HEADERS([cwiid.h],
      		 [],
		 [ERRORS="$ERRORS, $ac_header not found"])
AC_CHECK_LIB([cwiid],[main],
	     [WIIMOTE_LIBS="$WIIMOTE_LIBS -lcwiid"],
	     [ERRORS="$ERRORS, libcwiid not found"])
   if test "$ERRORS"; then
      AC_MSG_FAILURE([--enable-drivers-wiimote was given, but there was errors: $ERRORS])
   else
      ENABLED_DRIVERS="$ENABLED_DRIVERS wiimote"
      AM_CONDITIONAL([ENABLE_WIIMOTE],[true])
   fi
fi
AC_ARG_VAR([WIIMOTE_CFLAGS],[C compiler flags for WIIMOTE])
AC_ARG_VAR([WIIMOTE_LIBS],[linker flags for WIIMOTE])
AC_SUBST([WIIMOTE_CFLAGS])
AC_SUBST([WIIMOTE_LIBS])

AC_SUBST([ENABLED_DRIVERS])

dnl ########################################
dnl #
dnl # doc generators check
dnl #
dnl ########################################
dnl FIXME: que hacer si los chequeos fallan?
AC_PATH_PROG([DOXYGEN],[doxygen])
AC_PATH_PROG([LATEX],[latex])
AC_PATH_PROG([PDFLATEX],[pdflatex])
AC_PATH_PROG([DVIPS],[dvips])
AC_PATH_PROG([BIBTEX],[bibtex])

dnl ########################################
dnl #
dnl # schemas generators check
dnl #
dnl # * <schema>_CFLAGS and <schema>_LIBS can be defined as environment variables in
dnl #   configure time to set paths and other compile/link options
dnl #
dnl ########################################
AC_MSG_NOTICE([*** Checking schemas:])

dnl#check eyeoperator1/4
if test "x$enable_schemas_eyeoperator" = xno; then
   AM_CONDITIONAL([ENABLE_EYEOPERATOR],[false])
else
ERRORS=""
AC_MSG_NOTICE([**** Checking schema eyeoperator1/4:])
AC_CHECK_HEADERS([X11/Xlib.h X11/Xutil.h X11/Xos.h X11/Xatom.h X11/forms.h ipp.h],
      		 [],
		 [EYEOPERATOR_PKG_ERRORS="$EYEOPERATOR_PKG_ERRORS, $ac_header not found"])
AC_CHECK_LIB([forms],[main],
	     [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lforms"],
	     [ERRORS="$ERRORS, libforms not found"],[-lm])
AC_CHECK_LIB([X11],[main],
	     [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lX11"],
	     [ERRORS="$ERRORS, libX11 not found"])
AC_PATH_PROG([FDESIGN],[fdesign],
	     [ERRORS="fdesign needed to build eyeoperator schema not found"])
      AC_CHECK_LIB([ippaca6],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippaca6"],
		   [ERRORS="$ERRORS, libippaca6 not found"])
      AC_CHECK_LIB([ippacpx],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippacpx"],
		   [ERRORS="$ERRORS, libippacpx not found"])
      AC_CHECK_LIB([ippac],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippac"],
		   [ERRORS="$ERRORS, libippac not found"])
      AC_CHECK_LIB([ippact7],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippact7"],
		   [ERRORS="$ERRORS, libippact7 not found"])
      AC_CHECK_LIB([ippacv8],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippacv8"],
		   [ERRORS="$ERRORS, libippacv8 not found"])
      AC_CHECK_LIB([ippacw7],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippacw7"],
		   [ERRORS="$ERRORS, libippacw7 not found"])
      AC_CHECK_LIB([ippcca6],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippcca6"],
		   [ERRORS="$ERRORS, libippcca6 not found"])
      AC_CHECK_LIB([ippccpx],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippccpx"],
		   [ERRORS="$ERRORS, libippccpx not found"])
      AC_CHECK_LIB([ippcc],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippcc"],
		   [ERRORS="$ERRORS, libippcc not found"])
      AC_CHECK_LIB([ippcct7],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippcct7"],
		   [ERRORS="$ERRORS, libippcct7 not found"])
      AC_CHECK_LIB([ippccv8],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippccv8"],
		   [ERRORS="$ERRORS, libippccv8 not found"])
      AC_CHECK_LIB([ippccw7],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippccw7"],
		   [ERRORS="$ERRORS, libippccw7 not found"])
      AC_CHECK_LIB([ippcha6],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippcha6"],
		   [ERRORS="$ERRORS, libippcha6 not found"])
      AC_CHECK_LIB([ippchpx],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippchpx"],
		   [ERRORS="$ERRORS, libippchpx not found"])
      AC_CHECK_LIB([ippch],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippch"],
		   [ERRORS="$ERRORS, libippch not found"])
      AC_CHECK_LIB([ippcht7],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippcht7"],
		   [ERRORS="$ERRORS, libippcht7 not found"])
      AC_CHECK_LIB([ippchv8],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippchv8"],
		   [ERRORS="$ERRORS, libippchv8 not found"])
      AC_CHECK_LIB([ippchw7],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippchw7"],
		   [ERRORS="$ERRORS, libippchw7 not found"])
      AC_CHECK_LIB([ippcore],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippcore"],
		   [ERRORS="$ERRORS, libippcore not found"])
      AC_CHECK_LIB([ippcva6],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippcva6"],
		   [ERRORS="$ERRORS, libippcva6 not found"])
      AC_CHECK_LIB([ippcvpx],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippcvpx"],
		   [ERRORS="$ERRORS, libippcvpx not found"])
      AC_CHECK_LIB([ippcv],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippcv"],
		   [ERRORS="$ERRORS, libippcv not found"])
      AC_CHECK_LIB([ippcvt7],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippcvt7"],
		   [ERRORS="$ERRORS, libippcvt7 not found"])
      AC_CHECK_LIB([ippcvv8],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippcvv8"],
		   [ERRORS="$ERRORS, libippcvv8 not found"])
      AC_CHECK_LIB([ippcvw7],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippcvw7"],
		   [ERRORS="$ERRORS, libippcvw7 not found"])
      AC_CHECK_LIB([ippdca6],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippdca6"],
		   [ERRORS="$ERRORS, libippdca6 not found"])
      AC_CHECK_LIB([ippdcpx],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippdcpx"],
		   [ERRORS="$ERRORS, libippdcpx not found"])
      AC_CHECK_LIB([ippdc],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippdc"],
		   [ERRORS="$ERRORS, libippdc not found"])
      AC_CHECK_LIB([ippdct7],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippdct7"],
		   [ERRORS="$ERRORS, libippdct7 not found"])
      AC_CHECK_LIB([ippdcv8],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippdcv8"],
		   [ERRORS="$ERRORS, libippdcv8 not found"])
      AC_CHECK_LIB([ippdcw7],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippdcw7"],
		   [ERRORS="$ERRORS, libippdcw7 not found"])
      AC_CHECK_LIB([ippia6],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippia6"],
		   [ERRORS="$ERRORS, libippia6 not found"])
      AC_CHECK_LIB([ippipx],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippipx"],
		   [ERRORS="$ERRORS, libippipx not found"])
      AC_CHECK_LIB([ippi],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippi"],
		   [ERRORS="$ERRORS, libippi not found"])
      AC_CHECK_LIB([ippit7],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippit7"],
		   [ERRORS="$ERRORS, libippit7 not found"])
      AC_CHECK_LIB([ippiv8],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippiv8"],
		   [ERRORS="$ERRORS, libippiv8 not found"])
      AC_CHECK_LIB([ippiw7],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippiw7"],
		   [ERRORS="$ERRORS, libippiw7 not found"])
      AC_CHECK_LIB([ippja6],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippja6"],
		   [ERRORS="$ERRORS, libippja6 not found"])
      AC_CHECK_LIB([ippjpx],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippjpx"],
		   [ERRORS="$ERRORS, libippjpx not found"])
      AC_CHECK_LIB([ippj],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippj"],
		   [ERRORS="$ERRORS, libippj not found"])
      AC_CHECK_LIB([ippjt7],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippjt7"],
		   [ERRORS="$ERRORS, libippjt7 not found"])
      AC_CHECK_LIB([ippjv8],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippjv8"],
		   [ERRORS="$ERRORS, libippjv8 not found"])
      AC_CHECK_LIB([ippjw7],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippjw7"],
		   [ERRORS="$ERRORS, libippjw7 not found"])
      AC_CHECK_LIB([ippma6],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippma6"],
		   [ERRORS="$ERRORS, libippma6 not found"])
      AC_CHECK_LIB([ippmpx],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippmpx"],
		   [ERRORS="$ERRORS, libippmpx not found"])
      AC_CHECK_LIB([ippm],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippm"],
		   [ERRORS="$ERRORS, libippm not found"])
      AC_CHECK_LIB([ippmt7],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippmt7"],
		   [ERRORS="$ERRORS, libippmt7 not found"])
      AC_CHECK_LIB([ippmv8],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippmv8"],
		   [ERRORS="$ERRORS, libippmv8 not found"])
      AC_CHECK_LIB([ippmw7],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippmw7"],
		   [ERRORS="$ERRORS, libippmw7 not found"])
      AC_CHECK_LIB([ippsa6],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippsa6"],
		   [ERRORS="$ERRORS, libippsa6 not found"])
      AC_CHECK_LIB([ippsca6],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippsca6"],
		   [ERRORS="$ERRORS, libippsca6 not found"])
      AC_CHECK_LIB([ippscpx],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippscpx"],
		   [ERRORS="$ERRORS, libippscpx not found"])
      AC_CHECK_LIB([ippsc],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippsc"],
		   [ERRORS="$ERRORS, libippsc not found"])
      AC_CHECK_LIB([ippsct7],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippsct7"],
		   [ERRORS="$ERRORS, libippsct7 not found"])
      AC_CHECK_LIB([ippscv8],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippscv8"],
		   [ERRORS="$ERRORS, libippscv8 not found"])
      AC_CHECK_LIB([ippscw7],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippscw7"],
		   [ERRORS="$ERRORS, libippscw7 not found"])
      AC_CHECK_LIB([ippspx],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippspx"],
		   [ERRORS="$ERRORS, libippspx not found"])
      AC_CHECK_LIB([ippsra6],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippsra6"],
		   [ERRORS="$ERRORS, libippsra6 not found"])
      AC_CHECK_LIB([ippsrpx],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippsrpx"],
		   [ERRORS="$ERRORS, libippsrpx not found"])
      AC_CHECK_LIB([ippsr],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippsr"],
		   [ERRORS="$ERRORS, libippsr not found"])
      AC_CHECK_LIB([ippsrt7],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippsrt7"],
		   [ERRORS="$ERRORS, libippsrt7 not found"])
      AC_CHECK_LIB([ippsrv8],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippsrv8"],
		   [ERRORS="$ERRORS, libippsrv8 not found"])
      AC_CHECK_LIB([ippsrw7],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippsrw7"],
		   [ERRORS="$ERRORS, libippsrw7 not found"])
      AC_CHECK_LIB([ipps],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lipps"],
		   [ERRORS="$ERRORS, libipps not found"])
      AC_CHECK_LIB([ippst7],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippst7"],
		   [ERRORS="$ERRORS, libippst7 not found"])
      AC_CHECK_LIB([ippsv8],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippsv8"],
		   [ERRORS="$ERRORS, libippsv8 not found"])
      AC_CHECK_LIB([ippsw7],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippsw7"],
		   [ERRORS="$ERRORS, libippsw7 not found"])
      AC_CHECK_LIB([ippvca6],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippvca6"],
		   [ERRORS="$ERRORS, libippvca6 not found"])
      AC_CHECK_LIB([ippvcpx],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippvcpx"],
		   [ERRORS="$ERRORS, libippvcpx not found"])
      AC_CHECK_LIB([ippvc],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippvc"],
		   [ERRORS="$ERRORS, libippvc not found"])
      AC_CHECK_LIB([ippvct7],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippvct7"],
		   [ERRORS="$ERRORS, libippvct7 not found"])
      AC_CHECK_LIB([ippvcv8],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippvcv8"],
		   [ERRORS="$ERRORS, libippvcv8 not found"])
      AC_CHECK_LIB([ippvcw7],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippvcw7"],
		   [ERRORS="$ERRORS, libippvcw7 not found"])
      AC_CHECK_LIB([ippvma6],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippvma6"],
		   [ERRORS="$ERRORS, libippvma6 not found"])
      AC_CHECK_LIB([ippvmpx],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippvmpx"],
		   [ERRORS="$ERRORS, libippvmpx not found"])
      AC_CHECK_LIB([ippvm],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippvm"],
		   [ERRORS="$ERRORS, libippvm not found"])
      AC_CHECK_LIB([ippvmt7],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippvmt7"],
		   [ERRORS="$ERRORS, libippvmt7 not found"])
      AC_CHECK_LIB([ippvmv8],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippvmv8"],
		   [ERRORS="$ERRORS, libippvmv8 not found"])
      AC_CHECK_LIB([ippvmw7],[main],
		   [EYEOPERATOR_LIBS="$EYEOPERATOR_LIBS -lippvmw7"],
		   [ERRORS="$ERRORS, libippvmw7 not found"])
   if test "$ERRORS"; then
      AC_MSG_FAILURE([--enable-schemas-eyeoperator was given, but there was errors: $ERRORS])
   else
      ENABLED_SCHEMAS="$ENABLED_SCHEMAS eyeoperator"
      AM_CONDITIONAL([ENABLE_EYEOPERATOR],[true])
   fi
fi
AC_ARG_VAR([EYEOPERATOR_CFLAGS],[C compiler flags for EYEOPERATOR])
AC_ARG_VAR([EYEOPERATOR_LIBS],[linker flags for EYEOPERATOR])
AC_SUBST([EYEOPERATOR_CFLAGS])
AC_SUBST([EYEOPERATOR_LIBS])


dnl # schema followball
if test "x$enable_schemas_followball" = xno; then
   AM_CONDITIONAL([ENABLE_FOLLOWBALL],[false])
else
ERRORS=""
AC_MSG_NOTICE([**** Checking schema followball:])
AC_CHECK_HEADERS([X11/Xlib.h X11/Xutil.h X11/Xos.h X11/Xatom.h X11/forms.h],
      		 [],
		 [ERRORS="$ERRORS, $ac_header not found"])
AC_CHECK_LIB([forms],[main],
	   [FOLLOWBALL_LIBS="$FOLLOWBALL_LIBS -lforms"],
	   [ERRORS="$ERRORS, libforms not found"],[-lm])
AC_CHECK_LIB([X11],[main],
	   [FOLLOWBALL_LIBS="$FOLLOWBALL_LIBS -lX11"],
	   [ERRORS="$ERRORS, libX11 not found"])
AC_PATH_PROG([FDESIGN],[fdesign],
	   [ERRORS="fdesign needed to build followball schema not found"])
   if test "$ERRORS"; then
      AC_MSG_FAILURE([--enable-schemas-followball was given, but there was errors: $ERRORS])
   else
      ENABLED_SCHEMAS="$ENABLED_SCHEMAS followball"
      AM_CONDITIONAL([ENABLE_FOLLOWBALL],[true])
   fi
fi
AC_ARG_VAR([FOLLOWBALL_CFLAGS],[C compiler flags for FOLLOWBALL])
AC_ARG_VAR([FOLLOWBALL_LIBS],[linker flags for FOLLOWBALL])
AC_SUBST([FOLLOWBALL_CFLAGS])
AC_SUBST([FOLLOWBALL_LIBS])

dnl # schema hsvtuner
if test "x$enable_schemas_hsvtuner" = xno; then
   AM_CONDITIONAL([ENABLE_HSVTUNER],[false])
else
ERRORS=""
AC_MSG_NOTICE([**** Checking schema hsvtuner:])
AC_CHECK_HEADERS([X11/Xlib.h X11/Xutil.h X11/Xos.h X11/Xatom.h X11/forms.h],
      		 [],
		 [ERRORS="$ERRORS, $ac_header not found"])
AC_CHECK_LIB([forms],[main],
	   [HSVTUNER_LIBS="$HSVTUNER_LIBS -lforms"],
	   [ERRORS="$ERRORS, libforms not found"],[-lm])
AC_CHECK_LIB([X11],[main],
	   [HSVTUNER_LIBS="$HSVTUNER_LIBS -lX11"],
	   [ERRORS="$ERRORS, libX11 not found"])
AC_PATH_PROG([FDESIGN],[fdesign],
	   [ERRORS="fdesign needed to build hsvtuner schema not found"])
   if test "$ERRORS"; then
      AC_MSG_FAILURE([--enable-schemas-hsvtuner was given, but there was errors: $ERRORS])
   else
      ENABLED_SCHEMAS="$ENABLED_SCHEMAS hsvtuner"
      AM_CONDITIONAL([ENABLE_HSVTUNER],[true])
   fi
fi
AC_ARG_VAR([HSVTUNER_CFLAGS],[C compiler flags for HSVTUNER])
AC_ARG_VAR([HSVTUNER_LIBS],[linker flags for HSVTUNER])
AC_SUBST([HSVTUNER_CFLAGS])
AC_SUBST([HSVTUNER_LIBS])

dnl # schema image_viewer
if test "x$enable_schemas_image_viewer" = xno; then
   AM_CONDITIONAL([ENABLE_IMAGE_VIEWER],[false])
else
AC_MSG_NOTICE([**** Checking schema image_viewer:])
PKG_CHECK_MODULES([IMAGE_VIEWER],[gtkglext-1.0 gdkglext-1.0 gthread-2.0 libglade-2.0],
	[ENABLED_SCHEMAS="$ENABLED_SCHEMAS image_viewer"
	AM_CONDITIONAL([ENABLE_IMAGE_VIEWER],[true])],
	[AC_MSG_FAILURE([--enable-schemas-image_viewer was given, but there was errors: $IMAGE_VIEWER_PKG_ERRORS])])
fi

dnl # schema imgrectifier
if test "x$enable_schemas_imgrectifier" = xno; then
   AM_CONDITIONAL([ENABLE_IMGRECTIFIER],[false])
else
AC_MSG_NOTICE([**** Checking schema imgrectifier:])
PKG_CHECK_MODULES([IMGRECTIFIER],[gtkglext-1.0 gdkglext-1.0 gthread-2.0 libglade-2.0 gsl],
        [ENABLED_SCHEMAS="$ENABLED_SCHEMAS imgrectifier"
	AM_CONDITIONAL([ENABLE_IMGRECTIFIER],[true])],
	[AC_MSG_FAILURE([--enable-schemas-imgrectifier was given, but there was errors: $IMGRECTIFIER_PKG_ERRORS])])
fi
   
dnl # schema introrob
if test "x$enable_schemas_introrob" = xno; then
   AM_CONDITIONAL([ENABLE_INTROROB],[false])
else
ERRORS=""
AC_MSG_NOTICE([**** Checking schema introrob:])
AC_CHECK_HEADERS([X11/Xlib.h X11/Xutil.h X11/Xos.h X11/Xatom.h X11/forms.h pioneer.h],
      		 [],
		 [ERRORS="$ERRORS, $ac_header not found"])
AC_CHECK_LIB([forms],[main],
	   [INTROROB_LIBS="$INTROROB_LIBS -lforms"],
	   [ERRORS="$ERRORS, libforms not found"],[-lm])
AC_CHECK_LIB([X11],[main],
	   [INTROROB_LIBS="$INTROROB_LIBS -lX11"],
	   [ERRORS="$ERRORS, libX11 not found"])
AC_CHECK_LIB([pioneer],[main],
	   [INTROROB_LIBS="$INTROROB_LIBS -lpioneer"],
	   [INTROROB_PKG_ERRORS="$INTROROB_PKG_ERRORS, libpioneer not found"])
AC_PATH_PROG([FDESIGN],[fdesign],
	   [ERRORS="fdesign needed to build introrob schema not found"])
   if test "$ERRORS"; then
      AC_MSG_FAILURE([--enable-schemas-introrob was given, but there was errors: $ERRORS])
   else
      ENABLED_SCHEMAS="$ENABLED_SCHEMAS introrob"
      AM_CONDITIONAL([ENABLE_INTROROB],[true])
   fi
fi
AC_ARG_VAR([INTROROB_CFLAGS],[C compiler flags for INTROROB])
AC_ARG_VAR([INTROROB_LIBS],[linker flags for INTROROB])
AC_SUBST([INTROROB_CFLAGS])
AC_SUBST([INTROROB_LIBS])


dnl # schema mastergui
if test "x$enable_schemas_mastergui" = xno; then
   AM_CONDITIONAL([ENABLE_MASTERGUI],[false])
else
ERRORS=""
AC_MSG_NOTICE([**** Checking schema mastergui:])
AC_CHECK_HEADERS([X11/Xlib.h X11/Xutil.h X11/Xos.h X11/Xatom.h X11/forms.h],
      		 [],
		 [ERRORS="$ERRORS, $ac_header not found"])
AC_CHECK_LIB([forms],[main],
	   [MASTERGUI_LIBS="$MASTERGUI_LIBS -lforms"],
	   [ERRORS="$ERRORS, libforms not found"],[-lm])
AC_CHECK_LIB([X11],[main],
	   [MASTERGUI_LIBS="$MASTERGUI_LIBS -lX11"],
	   [ERRORS="$ERRORS, libX11 not found"])
AC_PATH_PROG([FDESIGN],[fdesign],
	   [ERRORS="fdesign needed to build mastergui schema not found"])
   if test "$ERRORS"; then
      AC_MSG_FAILURE([--enable-schemas-mastergui was given, but there was errors: $ERRORS])
   else
      ENABLED_SCHEMAS="$ENABLED_SCHEMAS mastergui"
      AM_CONDITIONAL([ENABLE_MASTERGUI],[true])
   fi
fi
AC_ARG_VAR([MASTERGUI_CFLAGS],[C compiler flags for MASTERGUI])
AC_ARG_VAR([MASTERGUI_LIBS],[linker flags for MASTERGUI])
AC_SUBST([MASTERGUI_CFLAGS])
AC_SUBST([MASTERGUI_LIBS])

dnl # schema opengldemo
if test "x$enable_schemas_opengldemo" = xno; then
   AM_CONDITIONAL([ENABLE_OPENGLDEMO],[false])
else
ERRORS=""
AC_MSG_NOTICE([**** Checking schema opengldemo:])
AC_CHECK_HEADERS([X11/Xlib.h X11/Xutil.h X11/Xos.h X11/Xatom.h X11/forms.h X11/glcanvas.h GL/gl.h GL/glx.h GL/glu.h],
	       [],
	       [ERRORS="$ERRORS, $ac_header not found"])
AC_CHECK_LIB([forms],[main],
	   [OPENGLDEMO_LIBS="$OPENGLDEMO_LIBS -lforms"],
	   [ERRORS="$ERRORS, libforms not found"],[-lm])
AC_CHECK_LIB([X11],[main],
	   [OPENGLDEMO_LIBS="$OPENGLDEMO_LIBS -lX11"],
	   [ERRORS="$ERRORS, libX11 not found"])
AC_CHECK_LIB([formsGL],[main],
	   [OPENGLDEMO_LIBS="$OPENGLDEMO_LIBS -lformsGL"],
	   [ERRORS="$ERRORS, libformsGL not found"],[-lm])
AC_CHECK_LIB([GL],[main],
	   [OPENGLDEMO_LIBS="$OPENGLDEMO_LIBS -lGL"],
	   [ERRORS="$ERRORS, libGL not found"])
AC_CHECK_LIB([GLU],[main],
	   [OPENGLDEMO_LIBS="$OPENGLDEMO_LIBS -lGLU"],
	   [ERRORS="$ERRORS, libGLU not found"])
AC_PATH_PROG([FDESIGN],[fdesign],
	   [ERRORS="fdesign needed to build opengldemo schema not found"])
   if test "$ERRORS"; then
      AC_MSG_FAILURE([--enable-schemas-opengldemo was given, but there was errors: $ERRORS])
   else
      ENABLED_SCHEMAS="$ENABLED_SCHEMAS opengldemo"
      AM_CONDITIONAL([ENABLE_OPENGLDEMO],[true])
   fi
fi
AC_ARG_VAR([OPENGLDEMO_CFLAGS],[C compiler flags for OPENGLDEMO])
AC_ARG_VAR([OPENGLDEMO_LIBS],[linker flags for OPENGLDEMO])
AC_SUBST([OPENGLDEMO_CFLAGS])
AC_SUBST([OPENGLDEMO_LIBS])

dnl # schema opflow #FIXME IPP
if test "x$enable_schemas_opflow" = xno; then
   AM_CONDITIONAL([ENABLE_OPFLOW],[false])
else
ERRORS=""
AC_MSG_NOTICE([**** Checking schema opflow:])
AC_CHECK_HEADERS([X11/Xlib.h X11/Xutil.h X11/Xos.h X11/Xatom.h X11/forms.h],
      		 [],
		 [ERRORS="$ERRORS, $ac_header not found"])
AC_CHECK_LIB([forms],[main],
	   [OPFLOW_LIBS="$OPFLOW_LIBS -lforms"],
	   [ERRORS="$ERRORS, libforms not found"],[-lm])
AC_CHECK_LIB([X11],[main],
	   [OPFLOW_LIBS="$OPFLOW_LIBS -lX11"],
	   [ERRORS="$ERRORS, libX11 not found"])
AC_PATH_PROG([FDESIGN],[fdesign],
	   [ERRORS="fdesign needed to build opflow schema not found"])
   if test "$ERRORS"; then
      AC_MSG_FAILURE([--enable-schemas-opflow was given, but there was errors: $ERRORS])
   else
      ENABLED_SCHEMAS="$ENABLED_SCHEMAS opflow"
      AM_CONDITIONAL([ENABLE_OPFLOW],[true])
   fi
fi
AC_ARG_VAR([OPFLOW_CFLAGS],[C compiler flags for OPFLOW])
AC_ARG_VAR([OPFLOW_LIBS],[linker flags for OPFLOW])
AC_SUBST([OPFLOW_CFLAGS])
AC_SUBST([OPFLOW_LIBS])

dnl # schema recorder
if test "x$enable_schemas_recorder" = xno; then
   AM_CONDITIONAL([ENABLE_RECORDER],[false])
else
ERRORS=""
AC_MSG_NOTICE([**** Checking schema recorder:])
AC_CHECK_HEADERS([X11/Xlib.h X11/Xutil.h X11/Xos.h X11/Xatom.h X11/forms.h],
      		 [],
		 [ERRORS="$ERRORS, $ac_header not found"])
AC_CHECK_LIB([forms],[main],
	   [RECORDER_LIBS="$RECORDER_LIBS -lforms"],
	   [ERRORS="$ERRORS, libforms not found"],[-lm])
AC_CHECK_LIB([X11],[main],
	   [RECORDER_LIBS="$RECORDER_LIBS -lX11"],
	   [ERRORS="$ERRORS, libX11 not found"])
AC_PATH_PROG([FDESIGN],[fdesign],
	   [ERRORS="fdesign needed to build recorder schema not found"])
   if test "$ERRORS"; then
      AC_MSG_FAILURE([--enable-schemas-recorder was given, but there was errors: $ERRORS])
   else
      ENABLED_SCHEMAS="$ENABLED_SCHEMAS recorder"
      AM_CONDITIONAL([ENABLE_RECORDER],[true])
   fi
fi
AC_ARG_VAR([RECORDER_CFLAGS],[C compiler flags for RECORDER])
AC_ARG_VAR([RECORDER_LIBS],[linker flags for RECORDER])
AC_SUBST([RECORDER_CFLAGS])
AC_SUBST([RECORDER_LIBS])

dnl # schema teleoperator
if test "x$enable_schemas_teleoperator" = xno; then
   AM_CONDITIONAL([ENABLE_TELEOPERATOR],[false])
else
ERRORS=""
AC_MSG_NOTICE([**** Checking schema teleoperator:])
AC_CHECK_HEADERS([X11/Xlib.h X11/Xutil.h X11/Xos.h X11/Xatom.h X11/forms.h X11/glcanvas.h GL/gl.h GL/glx.h GL/glu.h pioneer.h],
		[],
		[ERRORS="$ERRORS, $ac_header not found"])
AC_CHECK_LIB([forms],[main],
	   [TELEOPERATOR_LIBS="$TELEOPERATOR_LIBS -lforms"],
	   [ERRORS="$ERRORS, libforms not found"],[-lm])
AC_CHECK_LIB([X11],[main],
	   [TELEOPERATOR_LIBS="$TELEOPERATOR_LIBS -lX11"],
	   [ERRORS="$ERRORS, libX11 not found"])
AC_CHECK_LIB([formsGL],[main],
	   [TELEOPERATOR_LIBS="$TELEOPERATOR_LIBS -lformsGL"],
	   [ERRORS="$ERRORS, libformsGL not found"],[-lm])
AC_CHECK_LIB([GL],[main],
	   [TELEOPERATOR_LIBS="$TELEOPERATOR_LIBS -lGL"],
	   [ERRORS="$ERRORS, libGL not found"])
AC_CHECK_LIB([GLU],[main],
	   [TELEOPERATOR_LIBS="$TELEOPERATOR_LIBS -lGLU"],
	   [ERRORS="$ERRORS, libGLU not found"])
AC_CHECK_LIB([pioneer],[main],
	   [TELEOPERATOR_LIBS="$TELEOPERATOR_LIBS -lpioneer"],
	   [ERRORS="$ERRORS, libpioneer not found"])
AC_PATH_PROG([FDESIGN],[fdesign],
	   [ERRORS="fdesign needed to build teleoperator schema not found"])
   if test "$ERRORS"; then
      AC_MSG_FAILURE([--enable-schemas-teleoperator was given, but there was errors: $ERRORS])
   else
      ENABLED_SCHEMAS="$ENABLED_SCHEMAS teleoperator"
      AM_CONDITIONAL([ENABLE_TELEOPERATOR],[true])
   fi
fi
AC_ARG_VAR([TELEOPERATOR_CFLAGS],[C compiler flags for TELEOPERATOR])
AC_ARG_VAR([TELEOPERATOR_LIBS],[linker flags for TELEOPERATOR])
AC_SUBST([TELEOPERATOR_CFLAGS])
AC_SUBST([TELEOPERATOR_LIBS])

dnl # schema wiimote_viewer
if test "x$enable_schemas_wiimote_viewer" = xno; then
   AM_CONDITIONAL([ENABLE_WIIMOTE_VIEWER],[false])
else
AC_MSG_NOTICE([**** Checking schema wiimote_viewer:])
PKG_CHECK_MODULES([WIIMOTE_VIEWER],[gtkglext-1.0 gdkglext-1.0 gthread-2.0 libglade-2.0],
	 [ENABLED_SCHEMAS="$ENABLED_SCHEMAS wiimote_viewer"
	  AM_CONDITIONAL([ENABLE_WIIMOTE_VIEWER],[true])],
	 [AC_MSG_FAILURE([--enable-schemas-wiimote_viewer was given, but there was errors: $WIIMOTE_VIEWER_PKG_ERRORS])])
fi


dnl ########################################
dnl #
dnl # utils generators check
dnl #
dnl ########################################
if test "x$enable_utils" = xno; then
   AM_CONDITIONAL([ENABLE_UTILS],[false])
else
   AC_MSG_NOTICE([*** Checking utils:])
   AM_CONDITIONAL([ENABLE_UTILS],[true])
fi


dnl ########################################
dnl #
dnl # examples generators check
dnl #
dnl ########################################


dnl ########################################
dnl #
dnl # Generate output, main and core makefiles
dnl #
dnl ########################################
AC_CONFIG_FILES([Makefile])
AC_CONFIG_FILES([base/Makefile])
dnl # generate utils Makefiles
AC_CONFIG_FILES([utils/Makefile \
		utils/colorspaces/Makefile \
		utils/fuzzylib/Makefile \
		utils/pioneer/Makefile \
		utils/progeo/Makefile])
dnl # generate driver Makefiles
AC_CONFIG_FILES([drivers/Makefile \
		drivers/evi/Makefile \
		drivers/firewire/Makefile \
		drivers/gazebo/Makefile \
		drivers/graphics_gtk/Makefile \
		drivers/graphics_xforms/Makefile \
		drivers/imagefile/Makefile \
		drivers/mplayer/Makefile \
		drivers/networkclient/Makefile \
		drivers/networkserver/Makefile \
		drivers/pantilt/Makefile \
		drivers/player/Makefile \
		drivers/wiimote/Makefile])
dnl # generate schemas Makefiles
AC_CONFIG_FILES([schemas/Makefile \
		schemas/eyeoperator1/Makefile \
		schemas/eyeoperator4/Makefile \
		schemas/followball/Makefile \
		schemas/hsvtuner/Makefile \
		schemas/image_viewer/Makefile \
		schemas/imgrectifier/Makefile \
		schemas/introrob/Makefile \
		schemas/mastergui/Makefile \
		schemas/opengldemo/Makefile \
		schemas/opflow/Makefile \
		schemas/recorder/Makefile \
		schemas/teleoperator/Makefile \
		schemas/wiimote_viewer/Makefile])
dnl # generate docs and examples Makefiles
AC_CONFIG_FILES([docs/Makefile \
		examples/Makefile])

AC_OUTPUT