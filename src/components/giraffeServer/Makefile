#############################################################################
# Makefile for building: giraffeServer
# Generated by qmake (2.01a) (Qt 4.5.2) on: vie ago 6 14:17:34 2010
# Project:  giraffeServer.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile giraffeServer.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -D_REENTRANT -Wall -W $(DEFINES)
CXXFLAGS      = -pipe -O2 -D_REENTRANT -Wall -W $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I/usr/include -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -lIce -lIceUtil -lIceGrid -lIceBox -lIceStorm -lIceStormService -lQtGui -lQtCore -lpthread
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = jointmotorComp.cpp \
		worker.cpp \
		monitor.cpp \
		dynamixel.cpp \
		JointMotor.cpp \
		jointmotorI.cpp \
		servo.cpp \
		q4serialport/q4serialport.cpp moc_worker.cpp \
		moc_monitor.cpp \
		moc_q4serialport.cpp
OBJECTS       = jointmotorComp.o \
		worker.o \
		monitor.o \
		dynamixel.o \
		JointMotor.o \
		jointmotorI.o \
		servo.o \
		q4serialport.o \
		moc_worker.o \
		moc_monitor.o \
		moc_q4serialport.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		giraffeServer.pro
QMAKE_TARGET  = giraffeServer
DESTDIR       = 
TARGET        = giraffeServer

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: giraffeServer.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -unix -o Makefile giraffeServer.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile giraffeServer.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/giraffeServer1.0.0 || $(MKDIR) .tmp/giraffeServer1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/giraffeServer1.0.0/ && $(COPY_FILE) --parents handler.h worker.h monitor.h config.h dynamixel.h JointMotor.h jointmotorI.h servo.h q4serialport/q4serialport.h rapplication/rapplication.h .tmp/giraffeServer1.0.0/ && $(COPY_FILE) --parents jointmotorComp.cpp worker.cpp monitor.cpp dynamixel.cpp JointMotor.cpp jointmotorI.cpp servo.cpp q4serialport/q4serialport.cpp .tmp/giraffeServer1.0.0/ && (cd `dirname .tmp/giraffeServer1.0.0` && $(TAR) giraffeServer1.0.0.tar giraffeServer1.0.0 && $(COMPRESS) giraffeServer1.0.0.tar) && $(MOVE) `dirname .tmp/giraffeServer1.0.0`/giraffeServer1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/giraffeServer1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_worker.cpp moc_monitor.cpp moc_q4serialport.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_worker.cpp moc_monitor.cpp moc_q4serialport.cpp
moc_worker.cpp: handler.h \
		servo.h \
		JointMotor.h \
		dynamixel.h \
		q4serialport/q4serialport.h \
		worker.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) worker.h -o moc_worker.cpp

moc_monitor.cpp: JointMotor.h \
		monitor.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) monitor.h -o moc_monitor.cpp

moc_q4serialport.cpp: q4serialport/q4serialport.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) q4serialport/q4serialport.h -o moc_q4serialport.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

jointmotorComp.o: jointmotorComp.cpp rapplication/rapplication.h \
		config.h \
		worker.h \
		handler.h \
		servo.h \
		JointMotor.h \
		dynamixel.h \
		q4serialport/q4serialport.h \
		monitor.h \
		jointmotorI.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o jointmotorComp.o jointmotorComp.cpp

worker.o: worker.cpp worker.h \
		handler.h \
		servo.h \
		JointMotor.h \
		dynamixel.h \
		q4serialport/q4serialport.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o worker.o worker.cpp

monitor.o: monitor.cpp monitor.h \
		JointMotor.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o monitor.o monitor.cpp

dynamixel.o: dynamixel.cpp dynamixel.h \
		handler.h \
		servo.h \
		JointMotor.h \
		q4serialport/q4serialport.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o dynamixel.o dynamixel.cpp

JointMotor.o: JointMotor.cpp JointMotor.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o JointMotor.o JointMotor.cpp

jointmotorI.o: jointmotorI.cpp jointmotorI.h \
		JointMotor.h \
		worker.h \
		handler.h \
		servo.h \
		dynamixel.h \
		q4serialport/q4serialport.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o jointmotorI.o jointmotorI.cpp

servo.o: servo.cpp servo.h \
		JointMotor.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o servo.o servo.cpp

q4serialport.o: q4serialport/q4serialport.cpp q4serialport/q4serialport.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o q4serialport.o q4serialport/q4serialport.cpp

moc_worker.o: moc_worker.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_worker.o moc_worker.cpp

moc_monitor.o: moc_monitor.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_monitor.o moc_monitor.cpp

moc_q4serialport.o: moc_q4serialport.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_q4serialport.o moc_q4serialport.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

